[tool.poetry]
name = "e2b-hackathon"
version = "0.1.0"
description = ""
authors = ["selvam palanimalai <selvam.palanimalai@gmail.com>, nehil jain <jain.nehil@gmail.com"]
readme = "README.md"
package-mode=false

[tool.poetry.dependencies]
python = "^3.11"
python-dotenv = "^1.0.1"
e2b-code-interpreter = "^0.0.10"
langgraph = "^0.2.34"
langsmith = "^0.1.131"
langchain-anthropic = "^0.2.3"
ipython = "^8.28.0"
langgraph-sdk = "^0.1.32"
langgraph-checkpoint-sqlite = "^2.0.0"
langchain-community = "^0.3.1"
langchain-experimental = "^0.3.2"
langchain-core = "^0.3.9"
langchain-openai = "^0.2.2"
notebook = "^7.2.2"
tavily-python = "^0.5.0"
wikipedia = "^1.4.0"
litellm = "^1.48.16"
langchain-fireworks = "^0.2.1"
jupyterlab = "^4.2.5"
ipdb = "^0.13.13"
firecrawl-py = "^1.2.4"
django = "^5.1.1"
django-environ = "^0.11.2"
pytest = "^8.3.3"
jq = "^1.8.0"
tdqm = "^0.0.1"
psycopg2-binary = "^2.9.9"
djangorestframework = "^3.15.2"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 88

[lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[lint.per-file-ignores]
"__init__.py" = ["F401"]

[lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[lint.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"


[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
